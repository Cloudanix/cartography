{
	"statements": [
		{
			"query": "MATCH (n:GCPCloudRunAuthorized Domain)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP CloudRun Authorized Domains that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPCloudRunAuthorized Domain)<-[r:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP GCPCloudRunAuthorized Domain-to-Project relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPCloudRunConfiguration)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP CloudRun Configuration that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPCloudRunConfiguration)<-[r:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP GCPCloudRunConfiguration-to-Project relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPCloudRunDomainMap)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP CloudRun Domain Maps that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPCloudRunDomainMap)<-[r:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP GCPCloudRunDomainMap-to-Project relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPCloudRunRevision)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP CloudRun Revisions that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPCloudRunRevision)<-[r:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP GCPCloudRunRevision-to-Project relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPCloudRunRoute)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP CloudRun Route that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPCloudRunRoute)<-[r:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP GCPCloudRunRoute-to-Project relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPCloudRunService)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP CloudRun Services that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPCloudRunService)<-[r:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP GCPCloudRunService-to-Project relationships that are out of date."
		}
	],
	"name": "Cleanup GCP Cloud Run Authorized Domains,Configurations,Domain Mappings,Revisions,Routes and Services."
}
