{
	"statements": [
		{
			"query": "MATCH (n:GCPBucketLabel)<-[:LABELED]-(:GCPBucket)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP Storage Labels that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPBucketLabel)<-[r:LABELED]-(:GCPBucket)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP Storage Bucket-to-Label relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPBucketPolicyBinding)<-[:ATTACHED_BINDING]-(:GCPBucket)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP Storage Bucket Policy Bindings that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPBucketPolicyBinding)<-[r:ATTACHED_BINDING]-(:GCPBucket)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP Storage Bucket to Policy Bindings relationships that are out of date."
		},
		{
			"query": "MATCH (n:GCPBucket)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE n.lastupdated <> $UPDATE_TAG WITH n LIMIT $LIMIT_SIZE DETACH DELETE (n) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Delete GCP Storage Buckets that no longer exist and detach them from all previously connected nodes."
		},
		{
			"query": "MATCH (:GCPBucket)<-[r:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE (r) return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100,
			"__comment__": "Remove GCP Storage Bucket-to-Project relationships that are out of date."
		}
	],
	"name": "cleanup GCP Storage Bucket Instances"
}