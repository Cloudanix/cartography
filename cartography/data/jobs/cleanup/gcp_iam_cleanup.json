{
    "statements": [
        {
            "query": "MATCH (n:GCPIAMRole)<-[:RESOURCE]-(:GCPProject{accountid: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DETACH DELETE (n) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Delete GCP IAM roles that no longer exist and detach them from all previously connected nodes."
        },
        {
            "query": "MATCH (:GCPIAMRole)<-[r:RESOURCE]-(:GCPProject{accountid: {GCP_PROJECT_ID}}) WHERE r.lastupdated <> {UPDATE_TAG} WITH r LIMIT {LIMIT_SIZE} DELETE (r) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Remove GCP GCPIAMRole-to-Project relationships that are out of date."
        },
        {
            "query": "MATCH (n:GCPIAMWorkloadidentitypoolprovider)<-[:RESOURCE]-(:GCPWorkloadidentitypool)<-[:RESOURCE]-(:GCPProject{accountid: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DETACH DELETE (n) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Delete GCP IAM Workloadidentitypoolsproviders that no longer exist and detach them from all previously connected nodes."
        },
        {
            "query": "MATCH (:GCPIAMWorloadidentitypoolprovider)<-[r:RESOURCE]-(:GCPWorkloadidentitypool)<-[:RESOURCE]-(:GCPProject{accountid: {GCP_PROJECT_ID}}) WHERE r.lastupdated <> {UPDATE_TAG} WITH r LIMIT {LIMIT_SIZE} DELETE (r) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Remove GCP GCPWorkloadidentitypoolproviders-to-GCPWorkloadidentitypool that are out of date."
        },
        {
            "query": "MATCH (n:GCPIAMWorkloadidentitypool)<-[:RESOURCE]-(:GCPProject{accountid: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DETACH DELETE (n) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Delete GCP Workloadidentitypool that no longer exist and detach them from all previously connected nodes."
        },
        {
            "query": "MATCH (:GCPIAMWorkloadidentitypool)<-[r:RESOURCE]-(:GCPProject{accountid: {GCP_PROJECT_ID}}) WHERE r.lastupdated <> {UPDATE_TAG} WITH r LIMIT {LIMIT_SIZE} DELETE (r) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Remove GCP GCPIAMWorkloadidentitypool-to-Project relationships that are out of date."
        },
        {
            "query": "MATCH (n:GCPIAMServiceAccount)<-[:RESOURCE]-(:GCPProject{accountid: {GCP_PROJECT_ID}}) WHERE n.lastupdated <> {UPDATE_TAG} WITH n LIMIT {LIMIT_SIZE} DETACH DELETE (n) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Delete GCP IAM Service Account that no longer exist and detach them from all previously connected nodes."
        },
        {
            "query": "MATCH (:GCPIAMServiceAccount)<-[r:RESOURCE]-(:GCPProject{accountid: {GCP_PROJECT_ID}}) WHERE r.lastupdated <> {UPDATE_TAG} WITH r LIMIT {LIMIT_SIZE} DELETE (r) return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100,
            "__comment__": "Remove GCP GCPIAMServiceAccount-to-Project relationships that are out of date."
        }
    ],
    "name": "Cleanup GCP IAM roles, workloadIdentityPools, workloadIdentityPoolsProviders and Service Accounts."
}