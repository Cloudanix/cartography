{
    "statements": [
        {
            "query": "MATCH ((n) <-[:RESOURCE]-(:AzureSubscription{id: {AZURE_SUBSCRIPTION_ID}})<-[:RESOURCE]-(:AzureTenant{id: {AZURE_TENANT_ID}})<-[:OWNER]-(:CloudanixWorkspace{id: {WORKSPACE_ID}})) where EXISTS(n.exposed_internet) AND labels(n) IN [['AzureVirtualMachine']] WITH n LIMIT {LIMIT_SIZE} REMOVE n.exposed_internet return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100
        },
        {
            "query": "MATCH ((rule:AzureNetworkSecurityRule)<-[:CONTAIN]-(group:AzureNetworkSecurityGroup)<-[:MEMBER_NETWORK_SECURITY_GROUP]-(interface:AzureNetworkInterface)<-[:MEMBER_NETWORK_INTERFACE]-(vm:AzureVirtualMachine)<-[:RESOURCE]-(:AzureSubscription{id: {AZURE_SUBSCRIPTION_ID}})<-[:RESOURCE]-(:AzureTenant{id: {AZURE_TENANT_ID}})<-[:OWNER]-(:CloudanixWorkspace{id: {WORKSPACE_ID}}))\nWHERE rule.access='Allow' And rule.source_port_range='*' OR rule.protocol='*' OR rule.source_address_prefix='0.0.0.0/0' \nSET vm.exposed_internet = true;",
            "iterative": false
        },
        {
            "query": "MATCH ((ip:AzurePublicIPAddress)<-[:MEMBER_PUBLIC_IP_ADDRESS]-(interface:AzureNetworkInterface)<-[:MEMBER_NETWORK_INTERFACE]-(vm:AzureVirtualMachine)<-[:RESOURCE]-(:AzureSubscription{id: {AZURE_SUBSCRIPTION_ID}})<-[:RESOURCE]-(:AzureTenant{id: {AZURE_TENANT_ID}})<-[:OWNER]-(:CloudanixWorkspace{id: {WORKSPACE_ID}}))\nSET vm.exposed_internet = true;",
            "iterative": false
        }
    ],
    "name": "Azure asset internet exposure"
}