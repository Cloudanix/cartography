{
    "statements": [
        {
            "query": "MATCH (dataset:GCPBigqueryDataset{exposed_internet:true})<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WITH dataset LIMIT $LIMIT_SIZE REMOVE dataset.exposed_internet, dataset.exposed_internet_type return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 1000
        },
        {
            "query": "MATCH (access:GCPAccess)-[a:ACCESS_TO]->(dataset:GCPBigqueryDataset)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})\nWHERE 'allUsers' IN access.special_group \nSET dataset.exposed_internet = true, (CASE WHEN NOT 'allUsers' IN  coalesce(dataset.exposed_internet_type , []) THEN dataset END).exposed_internet_type = coalesce(dataset.exposed_internet_type, []) + 'allUsers'",
            "iterative": false
        },
        {
            "query": "MATCH (access:GCPAccess)-[a:ACCESS_TO]->(dataset:GCPBigqueryDataset)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})\nWHERE 'allAuthenticatedUsers' IN access.special_group \nSET dataset.exposed_internet = true, (CASE WHEN NOT 'allAuthenticatedUsers' IN  coalesce(access.exposed_internet_type , []) THEN dataset END).exposed_internet_type = coalesce(dataset.exposed_internet_type, []) + 'allAuthenticatedUsers'",
            "iterative": false
        }
    ],
    "name": "GCP BigQuery public policy exposure analysis"
}
