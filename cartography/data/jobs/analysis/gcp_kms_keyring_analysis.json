{
	"statements": [
		{
			"query": "MATCH (keyring:GCPKMSKeyRing{exposed_internet:true})<-[r:RESOURCE]-(location:GCPLocation)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:GCPOrganization{id:$GCP_ORGANIZATION_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WITH keyring LIMIT $LIMIT_SIZE REMOVE keyring.exposed_internet, keyring.exposed_internet_type return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 1000
		},
		{
			"query": "MATCH (crypto_key:GCPKMSCryptoKey)<-[r:RESOURCE]-(keyring:GCPKMSKeyRing)<-[:RESOURCE]-(location:GCPLocation)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:GCPOrganization{id:$GCP_ORGANIZATION_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WITH crypto_key LIMIT $LIMIT_SIZE REMOVE crypto_key.exposed_internet, crypto_key.exposed_internet_type return COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 1000
		},
		{
			"query": "MATCH (binding:GCPBinding)<-[a:ATTACHED_BINDING]-(keyring:GCPKMSKeyRing)<-[r:RESOURCE]-(location:GCPLocation)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:GCPOrganization{id:$GCP_ORGANIZATION_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})\nWHERE 'allUsers' IN binding.members \nSET keyring.exposed_internet = true, (CASE WHEN NOT 'allUsers' IN  coalesce(keyring.exposed_internet_type , []) THEN keyring END).exposed_internet_type = coalesce(keyring.exposed_internet_type, []) + 'allUsers'",
			"iterative": false
		},
		{
			"query": "MATCH (binding:GCPBinding)<-[a:ATTACHED_BINDING]-(keyring:GCPKMSKeyRing)<-[r:RESOURCE]-(location:GCPLocation)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:GCPOrganization{id:$GCP_ORGANIZATION_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})\nWHERE 'allAuthenticatedUsers' IN binding.members \nSET keyring.exposed_internet = true, (CASE WHEN NOT 'allAuthenticatedUsers' IN  coalesce(keyring.exposed_internet_type , []) THEN keyring END).exposed_internet_type = coalesce(keyring.exposed_internet_type, []) + 'allAuthenticatedUsers'",
			"iterative": false
		},
		{
			"query": "MATCH (crypto_key:GCPKMSCryptoKey)<-[r:RESOURCE]-(keyring:GCPKMSKeyRing)<-[:RESOURCE]-(location:GCPLocation)<-[:RESOURCE]-(:GCPProject{id: $GCP_PROJECT_ID})<-[:OWNER]-(:GCPOrganization{id:$GCP_ORGANIZATION_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})\nWHERE keyring.exposed_internet = true \nSET crypto_key.exposed_internet = true, crypto_key.exposed_internet_type = keyring.exposed_internet_type",
			"iterative": false
		}
	],
	"name": "GCP Keyring public policy exposure analysis"
}