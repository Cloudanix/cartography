{
    "statements": [
        {
            "query": "MATCH ((n:AzureNetworkSubnet)<-[:CONTAIN]-(:AzureNetwork)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) where EXISTS(n.exposed_internet) WITH n LIMIT $LIMIT_SIZE REMOVE n.exposed_internet, n.exposed_internet_type return COUNT(*) as TotalCompleted",
            "iterative": true,
            "iterationsize": 100
        },
        {
            "query": "MATCH ((rule:AzureNetworkSecurityRule)<-[:CONTAIN]-(group:AzureNetworkSecurityGroup)<-[:MEMBER_NETWORK_SECURITY_GROUP]-(subnet:AzureNetworkSubnet)<-[:CONTAIN]-(n:AzureNetwork)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) WHERE rule.access='Allow' AND rule.source_address_prefix IN ['0.0.0.0/0', '::/0', '*', 'Internet'] SET subnet.exposed_internet = true, (CASE WHEN NOT 'internet_exposed_rule' IN  coalesce(subnet.exposed_internet_type , []) THEN subnet END).exposed_internet_type = coalesce(subnet.exposed_internet_type , []) + 'internet_exposed_rule';",
            "iterative": false
        }
    ],
    "name": "Azure asset internet exposure"
}