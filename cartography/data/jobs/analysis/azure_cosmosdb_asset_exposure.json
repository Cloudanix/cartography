{
	"statements": [
		{
			"query": "MATCH ((n:AzureCosmosDBAccount)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) WHERE EXISTS(n.exposed_internet) WITH n LIMIT $LIMIT_SIZE REMOVE n.exposed_internet, n.exposed_internet_type RETURN COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100
		},
		{
			"query": "MATCH ((n)<-[:CONTAINS]-(:AzureCosmosDBAccount)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) WHERE EXISTS(n.exposed_internet) AND n:AzureCosmosDBSqlDatabase OR n:AzureCosmosDBCassandraKeySpace OR n:AzureCosmosDBMongoDBDatabase OR n:AzureCosmosDBTableResource WITH n LIMIT $LIMIT_SIZE REMOVE n.exposed_internet, n.exposed_internet_type RETURN COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100
		},
		{
			"query": "MATCH (acc:AzureCosmosDBAccount{virtualnetworkfilterenabled: false})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE isEmpty(acc.ipranges) SET acc.exposed_internet = true, (CASE WHEN NOT 'public_network' IN  coalesce(acc.exposed_internet_type , []) THEN acc END).exposed_internet_type = coalesce(acc.exposed_internet_type , []) + 'public_network';",
			"iterative": false
		},
		{
			"query": "MATCH (sql:AzureCosmosDBSqlDatabase)<-[:CONTAINS]-(acc:AzureCosmosDBAccount{exposed_internet: true})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) SET sql.exposed_internet = true, sql.exposed_internet_type = acc.exposed_internet_type;",
			"iterative": false
		},
		{
			"query": "MATCH (cassandra:AzureCosmosDBCassandraKeySpace)<-[:CONTAINS]-(acc:AzureCosmosDBAccount{exposed_internet: true})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) SET cassandra.exposed_internet = true, cassandra.exposed_internet_type = acc.exposed_internet_type;",
			"iterative": false
		},
		{
			"query": "MATCH (mongo:AzureCosmosDBMongoDBDatabase)<-[:CONTAINS]-(acc:AzureCosmosDBAccount{exposed_internet: true})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) SET mongo.exposed_internet = true, mongo.exposed_internet_type = acc.exposed_internet_type;",
			"iterative": false
		},
		{
			"query": "MATCH (tr:AzureCosmosDBTableResource)<-[:CONTAINS]-(acc:AzureCosmosDBAccount{exposed_internet: true})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) SET tr.exposed_internet = true, tr.exposed_internet_type = acc.exposed_internet_type;",
			"iterative": false
		}
	],
	"name": "Azure cosmosdb asset internet exposure"
}
