{
	"statements": [
		{
			"query": "MATCH ((n:AzureCosmosDBAccount)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) WHERE EXISTS(n.exposed_internet) WITH n LIMIT $LIMIT_SIZE REMOVE n.exposed_internet, n.exposed_internet_type RETURN COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100
		},
		{
			"query": "MATCH ((n:AzureCosmosDBSqlDatabase)<-[:CONTAINS]-(:AzureCosmosDBAccount)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) WHERE EXISTS(n.exposed_internet) WITH n LIMIT $LIMIT_SIZE REMOVE n.exposed_internet, n.exposed_internet_type RETURN COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100
		},
		{
			"query": "MATCH ((n:AzureCosmosDBCassandraKeySpace)<-[:CONTAINS]-(:AzureCosmosDBAccount)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) WHERE EXISTS(n.exposed_internet) WITH n LIMIT $LIMIT_SIZE REMOVE n.exposed_internet, n.exposed_internet_type RETURN COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100
		},
		{
			"query": "MATCH ((n:AzureCosmosDBMongoDBDatabase)<-[:CONTAINS]-(:AzureCosmosDBAccount)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) WHERE EXISTS(n.exposed_internet) WITH n LIMIT $LIMIT_SIZE REMOVE n.exposed_internet, n.exposed_internet_type RETURN COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100
		},
		{
			"query": "MATCH ((n:AzureCosmosDBTableResource)<-[:CONTAINS]-(:AzureCosmosDBAccount)<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID})) WHERE EXISTS(n.exposed_internet) WITH n LIMIT $LIMIT_SIZE REMOVE n.exposed_internet, n.exposed_internet_type RETURN COUNT(*) as TotalCompleted",
			"iterative": true,
			"iterationsize": 100
		},
		{
			"query": "MATCH (acc:AzureCosmosDBAccount{virtualnetworkfilterenabled: false})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE isEmpty(acc.ipranges) SET acc.exposed_internet = true, (CASE WHEN NOT 'public_network' IN  coalesce(acc.exposed_internet_type , []) THEN acc END).exposed_internet_type = coalesce(acc.exposed_internet_type , []) + 'public_network';",
			"iterative": false
		},
		{
			"query": "MATCH (sql:AzureCosmosDBSqlDatabase)<-[:CONTAINS]-(acc:AzureCosmosDBAccount{virtualnetworkfilterenabled: false})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE isEmpty(acc.ipranges) SET sql.exposed_internet = true, (CASE WHEN NOT 'public_network' IN  coalesce(sql.exposed_internet_type , []) THEN sql END).exposed_internet_type = coalesce(sql.exposed_internet_type , []) + 'public_network';",
			"iterative": false
		},
		{
			"query": "MATCH (cassandra:AzureCosmosDBCassandraKeySpace)<-[:CONTAINS]-(acc:AzureCosmosDBAccount'{virtualnetworkfilterenabled: false})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE isEmpty(acc.ipranges) SET cassandra.exposed_internet = true, (CASE WHEN NOT 'public_network' IN  coalesce(cassandra.exposed_internet_type , []) THEN cassandra END).exposed_internet_type = coalesce(cassandra.exposed_internet_type , []) + 'public_network';",
			"iterative": false
		},
		{
			"query": "MATCH (mongo:AzureCosmosDBMongoDBDatabase)<-[:CONTAINS]-(acc:AzureCosmosDBAccount'{virtualnetworkfilterenabled: false})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE isEmpty(acc.ipranges) SET mongo.exposed_internet = true, (CASE WHEN NOT 'public_network' IN  coalesce(mongo.exposed_internet_type , []) THEN mongo END).exposed_internet_type = coalesce(mongo.exposed_internet_type , []) + 'public_network';",
			"iterative": false
		},
		{
			"query": "MATCH (tr:AzureCosmosDBTableResource)<-[:CONTAINS]-(acc:AzureCosmosDBAccount'{virtualnetworkfilterenabled: false})<-[:RESOURCE]-(:AzureSubscription{id: $AZURE_SUBSCRIPTION_ID})<-[:RESOURCE]-(:AzureTenant{id: $AZURE_TENANT_ID})<-[:OWNER]-(:CloudanixWorkspace{id: $WORKSPACE_ID}) WHERE isEmpty(acc.ipranges) SET tr.exposed_internet = true, (CASE WHEN NOT 'public_network' IN  coalesce(tr.exposed_internet_type , []) THEN tr END).exposed_internet_type = coalesce(tr.exposed_internet_type , []) + 'public_network';",
			"iterative": false
		}
	],
	"name": "Azure cosmosdb asset internet exposure"
}
